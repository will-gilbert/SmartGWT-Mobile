
task usage << { print """
==================================================================================

gradle compileJava
  Compile Java source code displaying warnings and error to the terminal console.

gradle jar
  Build the JAR; Contains both the class and source files

gradle clean
  Delete working files in 'project.buildDir'; invokes '' to remove the directory 
  used by the GWT DevMode environment

gradle install
  Build the JAR; Install it in the local Maven repository; It will then get
  accessed via Gradle. If using the suffix '-SNAPSHOT', the resposity will be
  check on every rebuild of project using this dependency.

============================================================================================
"""}

// Used to modify sources and resources
import org.apache.tools.ant.filters.ReplaceTokens
import java.text.SimpleDateFormat;

apply plugin: 'java'
apply plugin: 'maven'

// C O N F I G U R A T I O N ------------------------------------------------------------------

// Project Configuration ----------------------------------------------------------------------
group = 'com.smartgwt'
version = '1.0-local-SNAPSHOT'   // 'local' may differ from Isomorphic version

// Properties Configuration -------------------------------------------------------------------

ext.localityProperties = [
    'project.version'  : project.version,
    'build.date'       : new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z").format(new Date())
]

// Compilers Configuration -------------------------------------------------------------------

// Java SDK
sourceCompatibility = 1.7
targetCompatibility = sourceCompatibility

// R e p o s i t o r i e s   &   D e p e n d e n c i e s --------------------------------------

repositories {
    mavenLocal()                                       // User's local
    mavenCentral()                                     // Maven Central repository
}

dependencies {

    def gwt = '2.7.0'

    compile ([ 
        "com.google.gwt:gwt-user:$gwt",
        "com.google.gwt:gwt-dev:$gwt"  
    ])
    
}

// Include both source in the final JAR
jar {

     from (sourceSets.main.allSource) {
       exclude '**/*.properties'
    }

 }

// Augment the 'processResources' task from the 'java' plugin.  Use filtering to replace
//   '@...@' tags with properties in order to customize the target environment

processResources {
    filter(ReplaceTokens, tokens: localityProperties)
}

